name: Build and publish Docker image to Github

on:
    workflow_call:
        inputs:
            latest: 
                description: "Latest version"
                required: true
                type: boolean
            version:
                description: "New version"
                required: true
                type: string
            repository:
                description: "Repository. E.g. 'School-TestExam/services-identity' "
                required: true
                type: string

env:
    REGISTRY: ghcr.io
    NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages  # This should ensure that NuGet packages are always stored in the location
    IMAGE_NAME: ${{ github.repository }}

jobs:

    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
                with: 
                    fetch-depth: 0
        
            -   name: Configure dotnet
                uses: actions/setup-dotnet@v4
                with:
                    source-url: ${{ vars.NUGET_LOCATION }}
                env:
                    NUGET_AUTH_TOKEN: ${{ secrets.ORG_FULL_ACCESS_TOKEN }}
    
            -   name: Configure QEMU
                uses: docker/setup-qemu-action@v3
    
            -   name: Configure buildx
                uses: docker/setup-buildx-action@v3

            -   name: Github Packages login
                uses: docker/login-action@v3
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}
    
            -   name: Build and push container pre-release
                if: always() && !cancelled() && github.event_name == 'pull_request'
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: |
                        ${{ env.REGISTRY }}/${{ inputs.repository }}:edge
                    build-args: |
                        NUGET_USERNAME=${{ vars.NUGET_USERNAME }}
                        NUGET_TOKEN=${{ secrets.ORG_FULL_ACCESS_TOKEN }}