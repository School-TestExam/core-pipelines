name: Publish docker image to Dockerhub
on:
    workflow_call:
        inputs:
            repository:
                required: true
                type: string
            project:
                required: true
                type: string
        secrets:
            ORG_FULL_ACCESS_TOKEN:
                required: true

# Only allow one deployment task to run at a time
concurrency:
    group: ${{ inputs.repository }}-${{ github.ref }} #Example: "School-TestExam/identity-[branch]" / School-TestExam/identity-main
    cancel-in-progress: true

permissions:
    contents: write
    pull-requests: write
    statuses: write
    packages: write
    checks: write

env:
    REGISTRY: ghcr.io
    TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"
    TESTCONTAINERS_RYUK_DISABLED: "true"
    ACTIONS_ALLOW_UNSECURE_COMMANDS: true # This is needed for running: "echo set-env"
    NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages  # This should ensure that NuGet packages are always stored in the location

jobs:
    discover:
        uses: School-TestExam/core-pipelines/.github/workflows/git-versioning.yaml@main
        secrets: inherit

    test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
                with: 
                    fetch-depth: 0
            
            -   name: Set env vars
                run: |
                    echo "::set-env name=NUGET_USERNAME::${{ vars.NUGET_USERNAME }}"
                    echo "::set-env name=NUGET_TOKEN::${{ secrets.ORG_FULL_ACCESS_TOKEN }}"

            -   name: Configure dotnet
                uses: actions/setup-dotnet@v4
                with:
                    source-url: ${{ vars.NUGET_LOCATION }}
                env:
                    NUGET_AUTH_TOKEN: ${{ secrets.ORG_FULL_ACCESS_TOKEN }}

            -   name: Test
                run: dotnet test --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage                
    
            -   name: Check files
                if: always() && !cancelled()
                id: check_files
                uses: andstor/file-existence-action@v3.0.0
                with:
                    files: "coverage/**/coverage.cobertura.xml"

            -   name: Merge Cobertura test reports
                if: always() && !cancelled() && steps.check_files.outputs.files_exists == 'true'
                uses: danielpalme/ReportGenerator-Github-Action@5.2.4
                with:
                    reports: "coverage/**/coverage.cobertura.xml"
            
            -   name: Code coverage comment
                if: always() && !cancelled() && steps.check_files.outputs.files_exists == 'true' && github.event_name == 'pull_request'
                uses: marocchino/sticky-pull-request-comment@v2
                with:
                    recreate: true
                    path: code-coverage-results.md

            -   name: Display test report
                if: always() && !cancelled() && steps.check_files.outputs.files_exists == 'true' && github.event_name == 'pull_request'
                uses: dorny/test-reporter@v1
                with:
                    name: Test Results      # Name of the check run which will be created
                    path: coverage/*.trx    # Path to the test results
                    reporter: dotnet-trx    # Format of the test results

    build-edge:
        if: always() && !cancelled() && (needs.test.result == 'success' || needs.test.result == 'skipped') && github.event_name == 'pull_request'
        name: create edge build
        needs: [discover, test]
        uses: School-TestExam/core-pipelines/.github/workflows/dotnet-image-publish.yaml@main
        secrets: inherit
        with:
            repository: ${{ inputs.repository }}
            version: ${{ needs.discover.outputs.version }}
            latest: false

    build-latest:
        if: always() && !cancelled() && (needs.test.result == 'success' || needs.test.result == 'skipped') && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        name: create latest build
        needs: [discover, test]
        uses: School-TestExam/core-pipelines/.github/workflows/dotnet-image-publish.yaml@main
        secrets: inherit
        with:
            repository: ${{ inputs.repository }}
            version: ${{ needs.discover.outputs.version }}
            latest: true

    tag-branch:
        if: always() && !cancelled() && (needs.test.result == 'success' || needs.test.result == 'skipped') && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        runs-on: ubuntu-latest
        needs: [discover, test, build-latest]
        steps:
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            
            -   name: Tag version
                if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
                run: |
                    git tag ${{ needs.discover.outputs.version_tag }}
                    git push origin --tags
                